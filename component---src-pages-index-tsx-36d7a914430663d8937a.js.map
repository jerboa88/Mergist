{"version":3,"file":"component---src-pages-index-tsx-36d7a914430663d8937a.js","mappings":"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","sources":["webpack://mergist/./src/components/dropzone-components.tsx","webpack://mergist/./src/components/alert.tsx","webpack://mergist/./node_modules/framer-motion/dist/es/context/ReorderContext.mjs","webpack://mergist/./node_modules/framer-motion/dist/es/components/Reorder/Group.mjs","webpack://mergist/./node_modules/framer-motion/dist/es/components/Reorder/utils/check-reorder.mjs","webpack://mergist/./node_modules/framer-motion/dist/es/value/use-motion-value.mjs","webpack://mergist/./node_modules/framer-motion/dist/es/value/use-combine-values.mjs","webpack://mergist/./node_modules/framer-motion/dist/es/value/use-transform.mjs","webpack://mergist/./node_modules/framer-motion/dist/es/value/use-computed.mjs","webpack://mergist/./node_modules/framer-motion/dist/es/utils/transform.mjs","webpack://mergist/./node_modules/framer-motion/dist/es/components/Reorder/Item.mjs","webpack://mergist/./node_modules/framer-motion/dist/es/components/Reorder/index.mjs","webpack://mergist/./node_modules/pretty-bytes/index.js","webpack://mergist/./src/components/file-manager.tsx","webpack://mergist/./src/pages/index.tsx"],"sourcesContent":["/*\n\tReusable dropzone components\n\t----------------------------\n*/\n\n\nimport React, { ChangeEvent, ReactNode, useRef, useState, useCallback, useEffect, DragEvent } from 'react';\nimport { faFileCirclePlus } from '@fortawesome/free-solid-svg-icons';\nimport { ignoreDefault } from '../common/utilities';\nimport { Icon } from '../components/icon-components';\n\n\n// Enables dropzone functionality for a child component. Accepts a callback function that fires when a file is dropped\nexport function DropzoneWrapper(props: { className: string; children: ReactNode; onFilesAdded: (files: FileList) => void; }) {\n\tfunction handleAddFiles(event: ChangeEvent<HTMLInputElement>) {\n\t\tignoreDefault(event);\n\n\t\tconst files = event.target.files;\n\n\t\t// The list will be empty if cancel is pressed, so we need to account for this\n\t\t// It should never be null but we might as well check to make the TS compiler happy\n\t\tif (files && files.length > 0) {\n\t\t\tprops.onFilesAdded(files);\n\t\t}\n\t}\n\n\treturn (\n\t\t<label className={`cursor-pointer ${props.className}`}>\n\t\t\t<input className=\"hidden\" type=\"file\" accept=\"application/pdf\" onChange={handleAddFiles} multiple />\n\t\t\t{props.children}\n\t\t</label>\n\t);\n}\n\nDropzoneWrapper.defaultProps = {\n\tclassName: ''\n};\n\n\n// A large dropzone component. Accepts a callback function that fires when a file is dropped\nexport function LargeDropzone(props: { onFilesAdded: (files: FileList) => void; }) {\n\treturn (\n\t\t<DropzoneWrapper className=\"flex-col flex-1\" onFilesAdded={props.onFilesAdded}>\n\t\t\t<div className=\"flex-col justify-center flex-1 m-8 p-8 gap-8 text-center z-20 bg-base-100 border-2 border-dashed rounded-lg hover:bg-base-200\">\n\t\t\t\t<Icon icon={faFileCirclePlus} tw=\"fa-3x\" />\n\t\t\t\t<p className='flex-grow-0'>Drag and drop PDF files here, or click to select files</p>\n\t\t\t</div>\n\t\t</DropzoneWrapper>\n\t);\n}\n\n\n// A full screen dropzone component. Accepts a callback function that fires when a file is dropped\n// Adapted from a GitHub comment by jlarmstrongiv (https://github.com/jlarmstrongiv)\n// Source: https://github.com/react-dropzone/react-dropzone/issues/753#issuecomment-774782919\nexport function FullPageDropzone(props: { onFilesAdded: (files: FileList) => void; }) {\n\tconst [isDragging, setIsDragging] = useState(false);\n\tconst dragCounter = useRef(0);\n\n\tconst handleDrag = useCallback((event: DragEvent<HTMLElement>) => {\n\t\tignoreDefault(event);\n\t}, []);\n\n\tconst handleDragIn = useCallback((event: DragEvent<HTMLElement>) => {\n\t\tignoreDefault(event);\n\n\t\tdragCounter.current++;\n\n\t\tif (event.dataTransfer.items && event.dataTransfer.items.length > 0) {\n\t\t\tsetIsDragging(true);\n\t\t}\n\t}, []);\n\n\tconst handleDragOut = useCallback((event: DragEvent<HTMLElement>) => {\n\t\tignoreDefault(event);\n\n\t\tdragCounter.current--;\n\n\t\tif (dragCounter.current > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetIsDragging(false);\n\t}, []);\n\n\tconst handleDrop = useCallback((event: DragEvent<HTMLElement>) => {\n\t\tignoreDefault(event);\n\t\tsetIsDragging(false);\n\n\t\tif (event.dataTransfer.files && event.dataTransfer.files.length > 0) {\n\t\t\tdragCounter.current = 0;\n\n\t\t\tprops.onFilesAdded(event.dataTransfer.files);\n\t\t\tevent.dataTransfer.clearData();\n\t\t}\n\t}, [props.onFilesAdded]);\n\n\tuseEffect(() => {\n\t\t// Force cast event parameter from the placeholder globalThis type to a proper React event type\n\t\ttype DragEventHandler = (event: unknown | globalThis.DragEvent) => void;\n\n\t\twindow.addEventListener('dragenter', handleDragIn as DragEventHandler);\n\t\twindow.addEventListener('dragleave', handleDragOut as DragEventHandler);\n\t\twindow.addEventListener('dragover', handleDrag as DragEventHandler);\n\t\twindow.addEventListener('drop', handleDrop as DragEventHandler);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('dragenter', handleDragIn as DragEventHandler);\n\t\t\twindow.removeEventListener('dragleave', handleDragOut as DragEventHandler);\n\t\t\twindow.removeEventListener('dragover', handleDrag as DragEventHandler);\n\t\t\twindow.removeEventListener('drop', handleDrop as DragEventHandler);\n\t\t};\n\t});\n\n\treturn (\n\t\t<div className={`fixed inset-0 flex-col justify-center items-center p-16 bg-base-100/50 z-10 ${isDragging ? '' : 'hidden'}`} />\n\t);\n}\n","/*\n\tAlert component for displaying status messages\n\t----------------------------------------------\n*/\n\n\nimport React, { useEffect, useState } from 'react';\nimport { faTriangleExclamation, faCircleExclamation, faSquareCheck } from '@fortawesome/free-solid-svg-icons';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { SeverityTypes } from '../common/types';\nimport { getDefaultTransition, StatusMsg } from '../common/utilities';\nimport { Icon } from '../components/icon-components';\n\n\nconst alertTypes = {\n\t[SeverityTypes.SUCCESS]: {\n\t\tclass: 'alert-success',\n\t\ticon: faSquareCheck\n\t},\n\t[SeverityTypes.WARNING]: {\n\t\tclass: 'alert-warning',\n\t\ticon: faTriangleExclamation\n\t},\n\t[SeverityTypes.ERROR]: {\n\t\tclass: 'alert-error',\n\t\ticon: faCircleExclamation\n\t}\n}\n\n\n// Exports\n\nexport default function Alert(props: { statusMsg: StatusMsg; }) {\n\tconst delayMs = 5000;\n\tconst type = props.statusMsg.getSeverity;\n\tconst [visible, setVisible] = useState(true);\n\tconst animationProps = {\n\t\tinitial: 'hidden',\n\t\tanimate: 'visible',\n\t\texit: 'hidden',\n\t\tvariants: {\n\t\t\tvisible: {\n\t\t\t\topacity: 1,\n\t\t\t\tscaleY: 1\n\t\t\t},\n\t\t\thidden: {\n\t\t\t\topacity: 0,\n\t\t\t\tscaleY: 0\n\t\t\t}\n\t\t},\n\t\t...getDefaultTransition()\n\t};\n\n\t// Hide the alert after a delay\n\tuseEffect(() => {\n\t\tconst timeoutId = setTimeout(() => {\n\t\t\tsetVisible(false);\n\t\t}, delayMs);\n\n\t\treturn () => {\n\t\t\tclearTimeout(timeoutId);\n\t\t}\n\t}, [delayMs]);\n\n\treturn (\n\t\t<AnimatePresence>\n\t\t\t{visible && (\n\t\t\t\t<motion.div layout className={`alert shadow ${alertTypes[type].class}`} key={props.statusMsg.getId} {...animationProps}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Icon icon={alertTypes[type].icon} tw=\"mr-2 fa-lg\" />\n\t\t\t\t\t\t<span>{props.statusMsg.getMsg}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</motion.div>\n\t\t\t)}\n\t\t</AnimatePresence>\n\t);\n}\n","import { createContext } from 'react';\n\nconst ReorderContext = createContext(null);\n\nexport { ReorderContext };\n","import { invariant } from '../../utils/errors.mjs';\nimport * as React from 'react';\nimport { forwardRef, useRef, useEffect } from 'react';\nimport { ReorderContext } from '../../context/ReorderContext.mjs';\nimport { motion } from '../../render/dom/motion.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { checkReorder } from './utils/check-reorder.mjs';\n\nfunction ReorderGroup({ children, as = \"ul\", axis = \"y\", onReorder, values, ...props }, externalRef) {\n    const Component = useConstant(() => motion(as));\n    const order = [];\n    const isReordering = useRef(false);\n    invariant(Boolean(values), \"Reorder.Group must be provided a values prop\");\n    const context = {\n        axis,\n        registerItem: (value, layout) => {\n            // If the entry was already added, update it rather than adding it again\n            const idx = order.findIndex((entry) => value === entry.value);\n            if (idx !== -1) {\n                order[idx].layout = layout[axis];\n            }\n            else {\n                order.push({ value: value, layout: layout[axis] });\n            }\n            order.sort(compareMin);\n        },\n        updateOrder: (item, offset, velocity) => {\n            if (isReordering.current)\n                return;\n            const newOrder = checkReorder(order, item, offset, velocity);\n            if (order !== newOrder) {\n                isReordering.current = true;\n                onReorder(newOrder\n                    .map(getValue)\n                    .filter((value) => values.indexOf(value) !== -1));\n            }\n        },\n    };\n    useEffect(() => {\n        isReordering.current = false;\n    });\n    return (React.createElement(Component, { ...props, ref: externalRef, ignoreStrict: true },\n        React.createElement(ReorderContext.Provider, { value: context }, children)));\n}\nconst Group = forwardRef(ReorderGroup);\nfunction getValue(item) {\n    return item.value;\n}\nfunction compareMin(a, b) {\n    return a.layout.min - b.layout.min;\n}\n\nexport { Group, ReorderGroup };\n","import { moveItem } from '../../../utils/array.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\nfunction checkReorder(order, value, offset, velocity) {\n    if (!velocity)\n        return order;\n    const index = order.findIndex((item) => item.value === value);\n    if (index === -1)\n        return order;\n    const nextOffset = velocity > 0 ? 1 : -1;\n    const nextItem = order[index + nextOffset];\n    if (!nextItem)\n        return order;\n    const item = order[index];\n    const nextLayout = nextItem.layout;\n    const nextItemCenter = mix(nextLayout.min, nextLayout.max, 0.5);\n    if ((nextOffset === 1 && item.layout.max + offset > nextItemCenter) ||\n        (nextOffset === -1 && item.layout.min + offset < nextItemCenter)) {\n        return moveItem(order, index, index + nextOffset);\n    }\n    return order;\n}\n\nexport { checkReorder };\n","import { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import { useMotionValue } from './use-motion-value.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { cancelFrame, frame } from '../frameloop/frame.mjs';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useIsomorphicLayoutEffect(() => {\n        const scheduleUpdate = () => frame.update(updateValue, false, true);\n        const subscriptions = values.map((v) => v.on(\"change\", scheduleUpdate));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cancelFrame(updateValue);\n        };\n    });\n    return value;\n}\n\nexport { useCombineMotionValues };\n","import { transform } from '../utils/transform.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useComputed } from './use-computed.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    if (typeof input === \"function\") {\n        return useComputed(input);\n    }\n    const transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n    const latest = useConstant(() => []);\n    return useCombineMotionValues(values, () => {\n        latest.length = 0;\n        const numValues = values.length;\n        for (let i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nexport { useTransform };\n","import { collectMotionValues } from './index.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\n\nfunction useComputed(compute) {\n    /**\n     * Open session of collectMotionValues. Any MotionValue that calls get()\n     * will be saved into this array.\n     */\n    collectMotionValues.current = [];\n    compute();\n    const value = useCombineMotionValues(collectMotionValues.current, compute);\n    /**\n     * Synchronously close session of collectMotionValues.\n     */\n    collectMotionValues.current = undefined;\n    return value;\n}\n\nexport { useComputed };\n","import { interpolate } from './interpolate.mjs';\n\nconst isCustomValueType = (v) => {\n    return v && typeof v === \"object\" && v.mix;\n};\nconst getMixer = (v) => (isCustomValueType(v) ? v.mix : undefined);\nfunction transform(...args) {\n    const useImmediate = !Array.isArray(args[0]);\n    const argOffset = useImmediate ? 0 : -1;\n    const inputValue = args[0 + argOffset];\n    const inputRange = args[1 + argOffset];\n    const outputRange = args[2 + argOffset];\n    const options = args[3 + argOffset];\n    const interpolator = interpolate(inputRange, outputRange, {\n        mixer: getMixer(outputRange[0]),\n        ...options,\n    });\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nexport { transform };\n","import { invariant } from '../../utils/errors.mjs';\nimport * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { ReorderContext } from '../../context/ReorderContext.mjs';\nimport { motion } from '../../render/dom/motion.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useMotionValue } from '../../value/use-motion-value.mjs';\nimport { useTransform } from '../../value/use-transform.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction useDefaultMotionValue(value, defaultValue = 0) {\n    return isMotionValue(value) ? value : useMotionValue(defaultValue);\n}\nfunction ReorderItem({ children, style = {}, value, as = \"li\", onDrag, layout = true, ...props }, externalRef) {\n    const Component = useConstant(() => motion(as));\n    const context = useContext(ReorderContext);\n    const point = {\n        x: useDefaultMotionValue(style.x),\n        y: useDefaultMotionValue(style.y),\n    };\n    const zIndex = useTransform([point.x, point.y], ([latestX, latestY]) => latestX || latestY ? 1 : \"unset\");\n    invariant(Boolean(context), \"Reorder.Item must be a child of Reorder.Group\");\n    const { axis, registerItem, updateOrder } = context;\n    return (React.createElement(Component, { drag: axis, ...props, dragSnapToOrigin: true, style: { ...style, x: point.x, y: point.y, zIndex }, layout: layout, onDrag: (event, gesturePoint) => {\n            const { velocity } = gesturePoint;\n            velocity[axis] &&\n                updateOrder(value, point[axis].get(), velocity[axis]);\n            onDrag && onDrag(event, gesturePoint);\n        }, onLayoutMeasure: (measured) => registerItem(value, measured), ref: externalRef, ignoreStrict: true }, children));\n}\nconst Item = forwardRef(ReorderItem);\n\nexport { Item, ReorderItem };\n","import { Group } from './Group.mjs';\nimport { Item } from './Item.mjs';\n\nconst Reorder = {\n    Group,\n    Item,\n};\n\nexport { Reorder };\n","const BYTE_UNITS = [\n\t'B',\n\t'kB',\n\t'MB',\n\t'GB',\n\t'TB',\n\t'PB',\n\t'EB',\n\t'ZB',\n\t'YB',\n];\n\nconst BIBYTE_UNITS = [\n\t'B',\n\t'KiB',\n\t'MiB',\n\t'GiB',\n\t'TiB',\n\t'PiB',\n\t'EiB',\n\t'ZiB',\n\t'YiB',\n];\n\nconst BIT_UNITS = [\n\t'b',\n\t'kbit',\n\t'Mbit',\n\t'Gbit',\n\t'Tbit',\n\t'Pbit',\n\t'Ebit',\n\t'Zbit',\n\t'Ybit',\n];\n\nconst BIBIT_UNITS = [\n\t'b',\n\t'kibit',\n\t'Mibit',\n\t'Gibit',\n\t'Tibit',\n\t'Pibit',\n\t'Eibit',\n\t'Zibit',\n\t'Yibit',\n];\n\n/*\nFormats the given number using `Number#toLocaleString`.\n- If locale is a string, the value is expected to be a locale-key (for example: `de`).\n- If locale is true, the system default locale is used for translation.\n- If no value for locale is specified, the number is returned unmodified.\n*/\nconst toLocaleString = (number, locale, options) => {\n\tlet result = number;\n\tif (typeof locale === 'string' || Array.isArray(locale)) {\n\t\tresult = number.toLocaleString(locale, options);\n\t} else if (locale === true || options !== undefined) {\n\t\tresult = number.toLocaleString(undefined, options);\n\t}\n\n\treturn result;\n};\n\nexport default function prettyBytes(number, options) {\n\tif (!Number.isFinite(number)) {\n\t\tthrow new TypeError(`Expected a finite number, got ${typeof number}: ${number}`);\n\t}\n\n\toptions = {\n\t\tbits: false,\n\t\tbinary: false,\n\t\tspace: true,\n\t\t...options,\n\t};\n\n\tconst UNITS = options.bits\n\t\t? (options.binary ? BIBIT_UNITS : BIT_UNITS)\n\t\t: (options.binary ? BIBYTE_UNITS : BYTE_UNITS);\n\n\tconst separator = options.space ? ' ' : '';\n\n\tif (options.signed && number === 0) {\n\t\treturn ` 0${separator}${UNITS[0]}`;\n\t}\n\n\tconst isNegative = number < 0;\n\tconst prefix = isNegative ? '-' : (options.signed ? '+' : '');\n\n\tif (isNegative) {\n\t\tnumber = -number;\n\t}\n\n\tlet localeOptions;\n\n\tif (options.minimumFractionDigits !== undefined) {\n\t\tlocaleOptions = {minimumFractionDigits: options.minimumFractionDigits};\n\t}\n\n\tif (options.maximumFractionDigits !== undefined) {\n\t\tlocaleOptions = {maximumFractionDigits: options.maximumFractionDigits, ...localeOptions};\n\t}\n\n\tif (number < 1) {\n\t\tconst numberString = toLocaleString(number, options.locale, localeOptions);\n\t\treturn prefix + numberString + separator + UNITS[0];\n\t}\n\n\tconst exponent = Math.min(Math.floor(options.binary ? Math.log(number) / Math.log(1024) : Math.log10(number) / 3), UNITS.length - 1);\n\tnumber /= (options.binary ? 1024 : 1000) ** exponent;\n\n\tif (!localeOptions) {\n\t\tnumber = number.toPrecision(3);\n\t}\n\n\tconst numberString = toLocaleString(Number(number), options.locale, localeOptions);\n\n\tconst unit = UNITS[exponent];\n\n\treturn prefix + numberString + separator + unit;\n}\n","/*\n\tComponent for displaying a list of files and associated action buttons\n\t----------------------------------------------------------------------\n*/\n\n\nimport React from 'react';\nimport { faFileCirclePlus, faGripVertical, faTrash, faXmark } from '@fortawesome/free-solid-svg-icons';\nimport { AnimatePresence, Reorder } from 'framer-motion';\nimport prettyBytes from 'pretty-bytes';\nimport { getDefaultTransition, ignoreDefault } from '../common/utilities';\nimport { PDFFileMapInterface } from '../common/types';\nimport { IconButton, PrimaryButton } from '../components/button-components';\nimport { DropzoneWrapper } from '../components/dropzone-components';\n\n\n// Base components\n\n// A reorderable list item\nfunction SortableItem(props: { id: string; name: string; size: number; onRemove: (fileId: string) => void; disabled: boolean }) {\n\tconst classNames = `bg-base-100 shadow-md flex-row justify-between p-2 gap-4 rounded-lg cursor-pointer overflow-hidden hover:bg-base-200 ${props.disabled && 'opacity-40' || ''}`;\n\tconst animationProps = {\n\t\tinitial: {\n\t\t\tscale: 0\n\t\t},\n\t\tanimate: {\n\t\t\tscale: 1\n\t\t},\n\t\texit: {\n\t\t\tscale: 0\n\t\t},\n\t\t...getDefaultTransition()\n\t}\n\n\treturn (\n\t\t<Reorder.Item key={props.id} value={props.id} className={classNames} {...animationProps}>\n\t\t\t<div className=\"flex-row items-center overflow-hidden gap-0 sm:gap-2\">\n\t\t\t\t<IconButton icon={faGripVertical} />\n\t\t\t\t<p className=\"font-bold overflow-hidden whitespace-nowrap text-ellipsis\">{props.name}</p>\n\t\t\t</div>\n\n\t\t\t<div className=\"flex-row flex-none items-center overflow-hidden gap-0 sm:gap-2\">\n\t\t\t\t<p className=\"whitespace-nowrap\">({prettyBytes(props.size, { maximumFractionDigits: 0 })})</p>\n\t\t\t\t<div className=\"card-actions justify-end\">\n\t\t\t\t\t<IconButton icon={faXmark} onClick={() => props.onRemove(props.id)} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Reorder.Item>\n\t);\n}\n\n\n// Create an interface for SortableFileList props since there are a lot of types to define\ninterface SortableFileListPropsInterface {\n\tfileIds: string[];\n\tfiles: PDFFileMapInterface;\n\tonReorder: (newFileIds: string[]) => void;\n\tonFileRemoved: (id: string) => void;\n\tdisabled: boolean;\n}\n\n// A reorderable list of PDF files\nfunction SortableFileList(props: SortableFileListPropsInterface) {\n\treturn (\n\t\t<Reorder.Group axis=\"y\" values={props.fileIds} onReorder={props.onReorder} className=\"flex-col px-6 py-7 gap-5 bg-base-300 shadow-inner overflow-hidden\">\n\t\t\t<AnimatePresence>\n\t\t\t\t{props.fileIds.map((fileId) => (\n\t\t\t\t\t<SortableItem key={fileId} id={fileId} name={props.files[fileId].getName} size={props.files[fileId].getSize} onRemove={props.onFileRemoved} disabled={props.disabled} />\n\t\t\t\t))}\n\t\t\t</AnimatePresence>\n\t\t</Reorder.Group>\n\t);\n}\n\n\n// Exports\n\n// Create an interface for FileManager props since there are a lot of types to define\ninterface FileManagerPropsInterface extends SortableFileListPropsInterface {\n\tonFileAdded: (inputFiles: FileList) => void;\n\tonAllFilesRemoved: () => void;\n}\n\n// A component that allows the user to add and remove PDF files from a list\nexport default function FileManager(props: FileManagerPropsInterface) {\n\t// Calculate the combined size of all files using a reduction\n\tfunction getEstimatedFileSize() {\n\t\treturn prettyBytes(Object.values(props.files).reduce((partialSum, pdfFile) => partialSum + pdfFile.getSize, 0));\n\t}\n\n\treturn (\n\t\t<div tabIndex={0} className=\"collapse\">\n\t\t\t<div className=\"flex-col sm:flex-row justify-between items-center p-6 sm:pl-10 gap-4 collapse-title text-lg font-medium\">\n\t\t\t\t<h2>\n\t\t\t\t\t{props.fileIds.length} file{props.fileIds.length !== 1 && 's'} added ({getEstimatedFileSize()})\n\t\t\t\t</h2>\n\t\t\t\t<div className=\"flex-row gap-2 flex-1 sm:flex-none\">\n\t\t\t\t\t<DropzoneWrapper onFilesAdded={props.onFileAdded}>\n\t\t\t\t\t\t<PrimaryButton icon={faFileCirclePlus} fake>\n\t\t\t\t\t\t\tAdd File\n\t\t\t\t\t\t</PrimaryButton>\n\t\t\t\t\t</DropzoneWrapper>\n\n\t\t\t\t\t<PrimaryButton icon={faTrash} onClick={props.onAllFilesRemoved}>\n\t\t\t\t\t\tRemove All\n\t\t\t\t\t</PrimaryButton>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Wrap the SortableFileList component with a div so that we can selectively prevent propagation of click events to it */}\n\t\t\t<div style={{ pointerEvents: props.disabled && 'none' || 'initial' }} onClick={props.disabled && ignoreDefault || undefined} className=\"overflow-hidden\">\n\t\t\t\t<SortableFileList fileIds={props.fileIds} files={props.files} onReorder={props.onReorder} onFileRemoved={props.onFileRemoved} disabled={props.disabled} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","// External deps\nimport React, { useState, useCallback } from 'react';\n\n// Local deps\nimport config from '../../gatsby-config';\nimport { PDFFileMapInterface } from '../common/types';\nimport { loadMetadata, PDFManager, StatusMsg } from '../common/utilities';\nimport { Main, PageLayout, Section } from '../components/layout-components';\nimport { FullPageDropzone, LargeDropzone } from '../components/dropzone-components';\nimport Alert from '../components/alert';\nimport { ActionButton } from '../components/button-components';\nimport Footer from '../components/footer';\nimport Header from '../components/header';\nimport FileManager from '../components/file-manager';\n\n\n// Exports\n\n// Index page component\nexport default function IndexPage() {\n  const [fileIds, setFileIds] = useState<string[]>([]);\n  const [files, setFiles] = useState<PDFFileMapInterface>({});\n  const [statusMsgs, setStatusMsgs] = useState<StatusMsg[]>([]);\n  const [mergedPdfUrl, setMergedPdfUrl] = useState<string>('');\n  const [currentProgress, setCurrentProgress] = useState<number>(0);\n\n  const metadata = loadMetadata(config);\n  const pdfManager = new PDFManager(metadata.shortTitle, metadata.siteUrl);\n\n\n  // Update the list of files and fileIds, resetting progress and the download URL\n  function updateState(newFileIds: string[], newFiles: PDFFileMapInterface | null = null) {\n    pdfManager.removeMergedFile(mergedPdfUrl);\n\n    // Skip updating if the file map hasn't changed\n    if (newFiles) {\n      setFiles(newFiles);\n    }\n\n    setFileIds(newFileIds);\n    setCurrentProgress(0);\n    setMergedPdfUrl('');\n  }\n\n  // Handler for file upload events\n  const handleAddFiles = useCallback((inputFiles: FileList) => {\n    const [validFileList, statusMsgList] = pdfManager.filterInvalidFiles(files, Array.from(inputFiles));\n\n    if (validFileList.length > 0) {\n      const tempFileMap = files;\n      const newFileIds = [] as string[];\n\n      for (const file of validFileList) {\n        newFileIds.push(file.id);\n        tempFileMap[file.id] = file;\n      }\n\n      updateState(fileIds.concat(newFileIds), tempFileMap);\n    }\n\n    if (statusMsgList.length > 0) {\n      setStatusMsgs(statusMsgList);\n    }\n  }, [fileIds, files]);\n\n  // Remove a single file from the list given its id\n  function handleRemoveFile(id: string) {\n    const newFiles = files;\n    const newFileIds = fileIds.filter(fileId => fileId !== id);\n\n    delete newFiles[id];\n\n    updateState(newFileIds, newFiles);\n  }\n\n  // Remove all files from the list\n  function handleRemoveAllFiles() {\n    updateState([], {});\n  }\n\n  // Reorder the list of file ids\n  function handleReorderFiles(fileIds: string[]) {\n    updateState(fileIds);\n  }\n\n  // Handle clicks on merge button\n  async function handleMerge() {\n    const [downloadUrl, statusMsgList] = await pdfManager.createMergedFile(files, fileIds, setCurrentProgress);\n\n    // Reset progress if there were any critical errors\n    if (downloadUrl === '') {\n      setMergedPdfUrl('');\n    }\n\n    setMergedPdfUrl(downloadUrl);\n    setStatusMsgs(statusMsgList);\n    setCurrentProgress(0);\n  }\n\n\n  return (\n    <PageLayout metadata={metadata}>\n      <Header title={metadata.shortTitle}>\n        {metadata.description}\n      </Header>\n\n      <Main>\n        <FullPageDropzone onFilesAdded={handleAddFiles} />\n\n        <Section visible={statusMsgs.length > 0} className=\"gap-5\">\n          {statusMsgs.map(statusMsg => (\n            <Alert key={statusMsg.getId} statusMsg={statusMsg} />\n          ))}\n        </Section>\n\n        <div tabIndex={0} className=\"collapse collapse-open flex-1 bg-base-100 border border-base-300 rounded-none sm:rounded-box\">\n          <Section visible={fileIds.length === 0} className=\"flex-1\">\n            <LargeDropzone onFilesAdded={handleAddFiles} />\n          </Section>\n\n          <Section visible={fileIds.length > 0}>\n            <FileManager fileIds={fileIds} files={files} onReorder={handleReorderFiles} onFileAdded={handleAddFiles} onFileRemoved={handleRemoveFile} onAllFilesRemoved={handleRemoveAllFiles} disabled={currentProgress > 0} />\n          </Section>\n        </div>\n\n        <Section visible={fileIds.length > 0} className=\"px-6 sm:px-0\">\n          <ActionButton numOfFiles={fileIds.length} progress={currentProgress} downloadUrl={mergedPdfUrl} onClick={handleMerge} />\n        </Section>\n      </Main>\n\n      <Footer author={metadata.author} githubUrl={metadata.githubUrl} homepageDomain={metadata.homepageDomain} />\n    </PageLayout>\n  );\n}\n"],"names":["DropzoneWrapper","props","React","className","type","accept","onChange","event","ignoreDefault","files","target","length","onFilesAdded","multiple","children","LargeDropzone","Icon","icon","faFileCirclePlus","tw","FullPageDropzone","isDragging","setIsDragging","useState","dragCounter","useRef","handleDrag","useCallback","handleDragIn","current","dataTransfer","items","handleDragOut","handleDrop","clearData","useEffect","window","addEventListener","removeEventListener","defaultProps","alertTypes","SeverityTypes","SUCCESS","class","faSquareCheck","WARNING","faTriangleExclamation","ERROR","faCircleExclamation","Alert","statusMsg","getSeverity","visible","setVisible","animationProps","initial","animate","exit","variants","opacity","scaleY","hidden","getDefaultTransition","timeoutId","setTimeout","clearTimeout","AnimatePresence","motion","div","Object","assign","layout","key","getId","getMsg","ReorderContext","createContext","Group","forwardRef","as","axis","onReorder","values","externalRef","Component","order","isReordering","Boolean","context","registerItem","value","idx","findIndex","entry","push","sort","compareMin","updateOrder","item","offset","velocity","newOrder","index","nextOffset","nextItem","nextLayout","nextItemCenter","mix","min","max","checkReorder","map","getValue","filter","indexOf","ref","ignoreStrict","Provider","a","b","useMotionValue","isStatic","useContext","MotionConfigContext","setLatest","on","useCombineMotionValues","combineValues","updateValue","set","scheduleUpdate","update","subscriptions","v","forEach","unsubscribe","useTransform","input","inputRangeOrTransformer","outputRange","options","compute","undefined","useComputed","transformer","args","useImmediate","Array","isArray","argOffset","inputValue","inputRange","interpolator","interpolate","mixer","isCustomValueType","transform","useListTransform","latest","numValues","i","get","useDefaultMotionValue","defaultValue","Reorder","Item","style","onDrag","point","x","y","zIndex","latestX","latestY","drag","dragSnapToOrigin","gesturePoint","onLayoutMeasure","measured","BYTE_UNITS","BIBYTE_UNITS","BIT_UNITS","BIBIT_UNITS","toLocaleString","number","locale","result","prettyBytes","Number","isFinite","TypeError","UNITS","bits","binary","space","separator","signed","isNegative","prefix","localeOptions","minimumFractionDigits","maximumFractionDigits","exponent","Math","floor","log","log10","toPrecision","SortableItem","classNames","disabled","scale","id","IconButton","faGripVertical","name","size","faXmark","onClick","onRemove","SortableFileList","fileIds","fileId","getName","getSize","onFileRemoved","FileManager","tabIndex","reduce","partialSum","pdfFile","onFileAdded","PrimaryButton","fake","faTrash","onAllFilesRemoved","pointerEvents","IndexPage","setFileIds","setFiles","statusMsgs","setStatusMsgs","mergedPdfUrl","setMergedPdfUrl","currentProgress","setCurrentProgress","metadata","loadMetadata","config","pdfManager","PDFManager","shortTitle","siteUrl","updateState","newFileIds","newFiles","removeMergedFile","handleAddFiles","inputFiles","validFileList","statusMsgList","filterInvalidFiles","from","tempFileMap","file","concat","PageLayout","Header","title","description","Main","Section","ActionButton","numOfFiles","progress","downloadUrl","async","createMergedFile","Footer","author","githubUrl","homepageDomain"],"sourceRoot":""}