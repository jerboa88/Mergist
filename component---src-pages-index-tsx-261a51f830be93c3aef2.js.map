{"version":3,"file":"component---src-pages-index-tsx-261a51f830be93c3aef2.js","mappings":"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","sources":["webpack://mergist/./src/components/dropzones/wrapper.tsx","webpack://mergist/./src/components/dropzones/large.tsx","webpack://mergist/./src/components/dropzones/full-page.tsx","webpack://mergist/./node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack://mergist/./node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack://mergist/./node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","webpack://mergist/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack://mergist/./src/components/alert.tsx","webpack://mergist/./src/components/buttons/full-width.tsx","webpack://mergist/./src/components/buttons/action.tsx","webpack://mergist/./node_modules/framer-motion/dist/es/context/ReorderContext.mjs","webpack://mergist/./node_modules/framer-motion/dist/es/value/use-motion-value.mjs","webpack://mergist/./node_modules/framer-motion/dist/es/value/use-combine-values.mjs","webpack://mergist/./node_modules/framer-motion/dist/es/value/use-transform.mjs","webpack://mergist/./node_modules/framer-motion/dist/es/value/use-computed.mjs","webpack://mergist/./node_modules/motion-dom/dist/es/utils/transform.mjs","webpack://mergist/./node_modules/framer-motion/dist/es/components/Reorder/Item.mjs","webpack://mergist/./node_modules/framer-motion/dist/es/components/Reorder/Group.mjs","webpack://mergist/./node_modules/framer-motion/dist/es/components/Reorder/utils/check-reorder.mjs","webpack://mergist/./node_modules/pretty-bytes/index.js","webpack://mergist/./src/components/buttons/icon.tsx","webpack://mergist/./src/components/file-manager.tsx","webpack://mergist/./src/components/layout/section.tsx","webpack://mergist/./src/components/layout/main.tsx","webpack://mergist/./src/pages/index.tsx"],"sourcesContent":["import type { ChangeEvent, ReactNode } from 'react';\nimport { ignoreDefault } from '../../common/utilities.ts';\n\ntype Props = {\n\tclassName?: string;\n\tchildren: ReactNode;\n\tonFilesAdded: (files: FileList) => void;\n};\n\n/**\n * Enables dropzone functionality for a child component.\n *\n * Accepts a callback function that fires when a file is dropped.\n */\nexport function DropzoneWrapper({\n\tclassName = '',\n\tchildren,\n\tonFilesAdded,\n}: Props) {\n\tfunction handleAddFiles(event: ChangeEvent<HTMLInputElement>) {\n\t\tignoreDefault(event);\n\n\t\tconst files = event.target.files;\n\n\t\t// The list will be empty if cancel is pressed, so we need to account for this\n\t\t// It should never be null but we might as well check to make the TS compiler happy\n\t\tif (files && files.length > 0) {\n\t\t\tonFilesAdded(files);\n\t\t}\n\t}\n\n\treturn (\n\t\t<label className={`cursor-pointer ${className}`}>\n\t\t\t<input\n\t\t\t\tclassName=\"hidden\"\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\"application/pdf\"\n\t\t\t\tonChange={handleAddFiles}\n\t\t\t\tmultiple\n\t\t\t/>\n\t\t\t{children}\n\t\t</label>\n\t);\n}\n","import { faFileCirclePlus } from '@fortawesome/free-solid-svg-icons';\nimport { Icon } from '../icon.tsx';\nimport { DropzoneWrapper } from './wrapper.tsx';\n\n/**\n * A large dropzone component.\n *\n * Accepts a callback function that fires when a file is dropped.\n */\nexport function LargeDropzone(props: {\n\tonFilesAdded: (files: FileList) => void;\n}) {\n\treturn (\n\t\t<DropzoneWrapper\n\t\t\tclassName=\"flex-col flex-1\"\n\t\t\tonFilesAdded={props.onFilesAdded}\n\t\t>\n\t\t\t<div className=\"z-20 flex-col flex-1 gap-8 justify-center p-8 m-8 text-center rounded-lg border-2 border-dashed transition-colors bg-base-100 hover:bg-base-200\">\n\t\t\t\t<Icon icon={faFileCirclePlus} className=\"fa-3x\" />\n\t\t\t\t<p className=\"flex-grow-0\">\n\t\t\t\t\tDrag and drop PDF files here, or click to select files\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</DropzoneWrapper>\n\t);\n}\n","import {\n\tuseState,\n\tuseRef,\n\tuseCallback,\n\ttype DragEvent,\n\tuseEffect,\n} from 'react';\nimport { ignoreDefault } from '../../common/utilities.ts';\n\n/**\n * A full screen dropzone component. Accepts a callback function that fires when a file is dropped\n *\n * Adapted from a GitHub comment by jlarmstrongiv (https://github.com/jlarmstrongiv)\n * Source: https://github.com/react-dropzone/react-dropzone/issues/753#issuecomment-774782919\n */\nexport function FullPageDropzone(props: {\n\tonFilesAdded: (files: FileList) => void;\n}) {\n\tconst [isDragging, setIsDragging] = useState(false);\n\tconst dragCounter = useRef(0);\n\n\tconst handleDrag = useCallback((event: DragEvent<HTMLElement>) => {\n\t\tignoreDefault(event);\n\t}, []);\n\n\tconst handleDragIn = useCallback((event: DragEvent<HTMLElement>) => {\n\t\tignoreDefault(event);\n\n\t\tdragCounter.current++;\n\n\t\tif (event.dataTransfer.items && event.dataTransfer.items.length > 0) {\n\t\t\tsetIsDragging(true);\n\t\t}\n\t}, []);\n\n\tconst handleDragOut = useCallback((event: DragEvent<HTMLElement>) => {\n\t\tignoreDefault(event);\n\n\t\tdragCounter.current--;\n\n\t\tif (dragCounter.current > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetIsDragging(false);\n\t}, []);\n\n\tconst handleDrop = useCallback(\n\t\t(event: DragEvent<HTMLElement>) => {\n\t\t\tignoreDefault(event);\n\t\t\tsetIsDragging(false);\n\n\t\t\tif (event.dataTransfer.files && event.dataTransfer.files.length > 0) {\n\t\t\t\tdragCounter.current = 0;\n\n\t\t\t\tprops.onFilesAdded(event.dataTransfer.files);\n\t\t\t\tevent.dataTransfer.clearData();\n\t\t\t}\n\t\t},\n\t\t[props.onFilesAdded],\n\t);\n\n\tuseEffect(() => {\n\t\t// Force cast event parameter from the placeholder globalThis type to a proper React event type\n\t\ttype DragEventHandler = (event: unknown | globalThis.DragEvent) => void;\n\n\t\twindow.addEventListener('dragenter', handleDragIn as DragEventHandler);\n\t\twindow.addEventListener('dragleave', handleDragOut as DragEventHandler);\n\t\twindow.addEventListener('dragover', handleDrag as DragEventHandler);\n\t\twindow.addEventListener('drop', handleDrop as DragEventHandler);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('dragenter', handleDragIn as DragEventHandler);\n\t\t\twindow.removeEventListener(\n\t\t\t\t'dragleave',\n\t\t\t\thandleDragOut as DragEventHandler,\n\t\t\t);\n\t\t\twindow.removeEventListener('dragover', handleDrag as DragEventHandler);\n\t\t\twindow.removeEventListener('drop', handleDrop as DragEventHandler);\n\t\t};\n\t});\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`fixed inset-0 flex-col justify-center items-center p-16 bg-base-100/50 z-10 ${isDragging ? '' : 'hidden'}`}\n\t\t/>\n\t);\n}\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { isHTMLElement } from 'motion-dom';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = isHTMLElement(parent)\n                ? parent.offsetWidth || 0\n                : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            if (document.head.contains(style)) {\n                document.head.removeChild(style);\n            }\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    let isReusedContext = true;\n    let context = useMemo(() => {\n        isReusedContext = false;\n        return {\n            id,\n            initial,\n            isPresent,\n            custom,\n            onExitComplete: (childId) => {\n                presenceChildren.set(childId, true);\n                for (const isComplete of presenceChildren.values()) {\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n                onExitComplete && onExitComplete();\n            },\n            register: (childId) => {\n                presenceChildren.set(childId, false);\n                return () => presenceChildren.delete(childId);\n            },\n        };\n    }, [isPresent, presenceChildren, onExitComplete]);\n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    if (presenceAffectsLayout && isReusedContext) {\n        context = { ...context };\n    }\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender?.();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && safeToRemove?.();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","import { useEffect, useState } from 'react';\nimport {\n\tfaTriangleExclamation,\n\tfaCircleExclamation,\n\tfaSquareCheck,\n} from '@fortawesome/free-solid-svg-icons';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { SeverityTypes } from '../common/types.ts';\nimport { getDefaultTransition, type StatusMsg } from '../common/utilities.ts';\nimport { Icon } from './icon.tsx';\n\nconst alertTypes = {\n\t[SeverityTypes.Success]: {\n\t\tclass: 'alert-success',\n\t\ticon: faSquareCheck,\n\t},\n\t[SeverityTypes.Warning]: {\n\t\tclass: 'alert-warning',\n\t\ticon: faTriangleExclamation,\n\t},\n\t[SeverityTypes.Error]: {\n\t\tclass: 'alert-error',\n\t\ticon: faCircleExclamation,\n\t},\n};\n\n/**\n * An alert for displaying status messages\n */\nexport function Alert(props: { statusMsg: StatusMsg }) {\n\tconst delayMs = 5000;\n\tconst type = props.statusMsg.getSeverity;\n\tconst [visible, setVisible] = useState(true);\n\tconst animationProps = {\n\t\tinitial: 'hidden',\n\t\tanimate: 'visible',\n\t\texit: 'hidden',\n\t\tvariants: {\n\t\t\tvisible: {\n\t\t\t\topacity: 1,\n\t\t\t\tscaleY: 1,\n\t\t\t},\n\t\t\thidden: {\n\t\t\t\topacity: 0,\n\t\t\t\tscaleY: 0,\n\t\t\t},\n\t\t},\n\t\t...getDefaultTransition(),\n\t};\n\n\t// Hide the alert after a delay\n\tuseEffect(() => {\n\t\tconst timeoutId = setTimeout(() => {\n\t\t\tsetVisible(false);\n\t\t}, delayMs);\n\n\t\treturn () => {\n\t\t\tclearTimeout(timeoutId);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<AnimatePresence>\n\t\t\t{visible && (\n\t\t\t\t<motion.div\n\t\t\t\t\tlayout\n\t\t\t\t\tclassName={`alert shadow ${alertTypes[type].class}`}\n\t\t\t\t\tkey={props.statusMsg.getId}\n\t\t\t\t\t{...animationProps}\n\t\t\t\t>\n\t\t\t\t\t<Icon icon={alertTypes[type].icon} className=\"mr-2 fa-lg\" />\n\t\t\t\t\t<span>{props.statusMsg.getMsg}</span>\n\t\t\t\t</motion.div>\n\t\t\t)}\n\t\t</AnimatePresence>\n\t);\n}\n","import type { ReactNode } from 'react';\n\ntype Props = {\n\tclassName?: string;\n\tdisabled?: boolean;\n\tonClick?: () => void;\n\tchildren: ReactNode;\n};\n\n/**\n * A full width button\n */\nexport function FullWidthButton({\n\tclassName = '',\n\tdisabled = false,\n\tonClick,\n\tchildren,\n}: Props) {\n\treturn (\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\tclassName={`gap-2 btn-block ${className}`}\n\t\t\tdisabled={disabled}\n\t\t\tonClick={onClick}\n\t\t>\n\t\t\t{children}\n\t\t</button>\n\t);\n}\n","import {\n\tfaFileArrowDown,\n\tfaLayerGroup,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FullWidthButton } from './full-width.tsx';\nimport { motion } from 'framer-motion';\nimport { Icon } from '../icon.tsx';\n\n// A simple progress bar component for the progress action button\nfunction ProgressBar(props: { progress: string }) {\n\tconst animationProps = {\n\t\tinitial: {\n\t\t\twidth: 0,\n\t\t},\n\t\tanimate: {\n\t\t\twidth: props.progress,\n\t\t},\n\t\ttransition: {\n\t\t\ttype: 'inertia',\n\t\t\tpower: 1,\n\t\t\ttimeConstant: 1000,\n\t\t\tvelocity: 100,\n\t\t},\n\t};\n\n\treturn (\n\t\t<div className=\"w-full h-1\">\n\t\t\t<motion.div\n\t\t\t\trole=\"progressbar\"\n\t\t\t\tclassName=\"h-full rounded-full bg-primary-content\"\n\t\t\t\t{...animationProps}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\n// A button component that triggers the merge action\nfunction MergeActionButton(props: { onClick: () => void; disabled: boolean }) {\n\tconst mergeButton = (\n\t\t<FullWidthButton\n\t\t\tclassName=\"btn-primary\"\n\t\t\tdisabled={props.disabled}\n\t\t\tonClick={props.onClick}\n\t\t>\n\t\t\t<Icon icon={faLayerGroup} />\n\t\t\tMerge Files\n\t\t</FullWidthButton>\n\t);\n\n\treturn (\n\t\t<div className=\"flex-col gap-2 w-full text-center\">\n\t\t\t{/* Wrap merge button with a tooltip if it is disabled */}\n\t\t\t{(props.disabled && (\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"tooltip tooltip-warning\"\n\t\t\t\t\tdata-tip=\"Please add more files to merge\"\n\t\t\t\t>\n\t\t\t\t\t{mergeButton}\n\t\t\t\t</div>\n\t\t\t)) ||\n\t\t\t\tmergeButton}\n\t\t</div>\n\t);\n}\n\n// A disabled full-width button component that shows the current progress percentage\nfunction ProgressActionButton(props: { progress: number }) {\n\tconst isSaving = props.progress >= 1;\n\tconst percentString = `${(props.progress * 100).toFixed(0)}%`;\n\tconst content = isSaving ? <span className=\"loading\" /> : percentString;\n\n\treturn (\n\t\t<div className=\"flex-col gap-2 w-full text-center\">\n\t\t\t<FullWidthButton\n\t\t\t\tclassName=\"overflow-hidden flex-col justify-end p-0 border-0 btn-primary\"\n\t\t\t\tdisabled={true}\n\t\t\t>\n\t\t\t\t{content}\n\t\t\t\t<ProgressBar progress={percentString} />\n\t\t\t</FullWidthButton>\n\t\t</div>\n\t);\n}\n\n// A full-width download button component\nexport function DownloadActionButton(props: { downloadUrl: string }) {\n\treturn (\n\t\t<a\n\t\t\thref={props.downloadUrl}\n\t\t\ttarget=\"_blank\"\n\t\t\trel=\"noopener noreferrer\"\n\t\t\tdownload=\"merged.pdf\"\n\t\t\tclassName=\"w-full\"\n\t\t>\n\t\t\t<FullWidthButton className=\"btn-accent\">\n\t\t\t\t<Icon icon={faFileArrowDown} />\n\t\t\t\tDownload\n\t\t\t</FullWidthButton>\n\t\t</a>\n\t);\n}\n\n/**\n * An action button that is used to start the merge process and changes based on the current state\n */\nexport function ActionButton(props: {\n\tnumOfFiles: number;\n\tprogress: number;\n\tdownloadUrl: string;\n\tonClick: () => void;\n}) {\n\treturn (() => {\n\t\tif (props.downloadUrl) {\n\t\t\treturn <DownloadActionButton downloadUrl={props.downloadUrl} />;\n\t\t}\n\n\t\tif (props.progress > 0) {\n\t\t\treturn <ProgressActionButton progress={props.progress} />;\n\t\t}\n\n\t\treturn (\n\t\t\t<MergeActionButton\n\t\t\t\tonClick={props.onClick}\n\t\t\t\tdisabled={props.numOfFiles < 2}\n\t\t\t/>\n\t\t);\n\t})();\n}\n","\"use client\";\nimport { createContext } from 'react';\n\nconst ReorderContext = createContext(null);\n\nexport { ReorderContext };\n","import { motionValue } from 'motion-dom';\nimport { useContext, useState, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import { cancelFrame, frame } from 'motion-dom';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useIsomorphicLayoutEffect(() => {\n        const scheduleUpdate = () => frame.preRender(updateValue, false, true);\n        const subscriptions = values.map((v) => v.on(\"change\", scheduleUpdate));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cancelFrame(updateValue);\n        };\n    });\n    return value;\n}\n\nexport { useCombineMotionValues };\n","import { transform } from 'motion-dom';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useComputed } from './use-computed.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    if (typeof input === \"function\") {\n        return useComputed(input);\n    }\n    const transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n    const latest = useConstant(() => []);\n    return useCombineMotionValues(values, () => {\n        latest.length = 0;\n        const numValues = values.length;\n        for (let i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nexport { useTransform };\n","import { collectMotionValues } from 'motion-dom';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\n\nfunction useComputed(compute) {\n    /**\n     * Open session of collectMotionValues. Any MotionValue that calls get()\n     * will be saved into this array.\n     */\n    collectMotionValues.current = [];\n    compute();\n    const value = useCombineMotionValues(collectMotionValues.current, compute);\n    /**\n     * Synchronously close session of collectMotionValues.\n     */\n    collectMotionValues.current = undefined;\n    return value;\n}\n\nexport { useComputed };\n","import { interpolate } from './interpolate.mjs';\n\nfunction transform(...args) {\n    const useImmediate = !Array.isArray(args[0]);\n    const argOffset = useImmediate ? 0 : -1;\n    const inputValue = args[0 + argOffset];\n    const inputRange = args[1 + argOffset];\n    const outputRange = args[2 + argOffset];\n    const options = args[3 + argOffset];\n    const interpolator = interpolate(inputRange, outputRange, options);\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nexport { transform };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { isMotionValue } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { ReorderContext } from '../../context/ReorderContext.mjs';\nimport { motion } from '../../render/components/motion/proxy.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useMotionValue } from '../../value/use-motion-value.mjs';\nimport { useTransform } from '../../value/use-transform.mjs';\n\nfunction useDefaultMotionValue(value, defaultValue = 0) {\n    return isMotionValue(value) ? value : useMotionValue(defaultValue);\n}\nfunction ReorderItemComponent({ children, style = {}, value, as = \"li\", onDrag, layout = true, ...props }, externalRef) {\n    const Component = useConstant(() => motion[as]);\n    const context = useContext(ReorderContext);\n    const point = {\n        x: useDefaultMotionValue(style.x),\n        y: useDefaultMotionValue(style.y),\n    };\n    const zIndex = useTransform([point.x, point.y], ([latestX, latestY]) => latestX || latestY ? 1 : \"unset\");\n    invariant(Boolean(context), \"Reorder.Item must be a child of Reorder.Group\");\n    const { axis, registerItem, updateOrder } = context;\n    return (jsx(Component, { drag: axis, ...props, dragSnapToOrigin: true, style: { ...style, x: point.x, y: point.y, zIndex }, layout: layout, onDrag: (event, gesturePoint) => {\n            const { velocity } = gesturePoint;\n            velocity[axis] &&\n                updateOrder(value, point[axis].get(), velocity[axis]);\n            onDrag && onDrag(event, gesturePoint);\n        }, onLayoutMeasure: (measured) => registerItem(value, measured), ref: externalRef, ignoreStrict: true, children: children }));\n}\nconst ReorderItem = /*@__PURE__*/ forwardRef(ReorderItemComponent);\n\nexport { ReorderItem, ReorderItemComponent };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { invariant } from 'motion-utils';\nimport { forwardRef, useRef, useEffect } from 'react';\nimport { ReorderContext } from '../../context/ReorderContext.mjs';\nimport { motion } from '../../render/components/motion/proxy.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { checkReorder } from './utils/check-reorder.mjs';\n\nfunction ReorderGroupComponent({ children, as = \"ul\", axis = \"y\", onReorder, values, ...props }, externalRef) {\n    const Component = useConstant(() => motion[as]);\n    const order = [];\n    const isReordering = useRef(false);\n    invariant(Boolean(values), \"Reorder.Group must be provided a values prop\");\n    const context = {\n        axis,\n        registerItem: (value, layout) => {\n            // If the entry was already added, update it rather than adding it again\n            const idx = order.findIndex((entry) => value === entry.value);\n            if (idx !== -1) {\n                order[idx].layout = layout[axis];\n            }\n            else {\n                order.push({ value: value, layout: layout[axis] });\n            }\n            order.sort(compareMin);\n        },\n        updateOrder: (item, offset, velocity) => {\n            if (isReordering.current)\n                return;\n            const newOrder = checkReorder(order, item, offset, velocity);\n            if (order !== newOrder) {\n                isReordering.current = true;\n                onReorder(newOrder\n                    .map(getValue)\n                    .filter((value) => values.indexOf(value) !== -1));\n            }\n        },\n    };\n    useEffect(() => {\n        isReordering.current = false;\n    });\n    return (jsx(Component, { ...props, ref: externalRef, ignoreStrict: true, children: jsx(ReorderContext.Provider, { value: context, children: children }) }));\n}\nconst ReorderGroup = /*@__PURE__*/ forwardRef(ReorderGroupComponent);\nfunction getValue(item) {\n    return item.value;\n}\nfunction compareMin(a, b) {\n    return a.layout.min - b.layout.min;\n}\n\nexport { ReorderGroup, ReorderGroupComponent };\n","import { mixNumber } from 'motion-dom';\nimport { moveItem } from 'motion-utils';\n\nfunction checkReorder(order, value, offset, velocity) {\n    if (!velocity)\n        return order;\n    const index = order.findIndex((item) => item.value === value);\n    if (index === -1)\n        return order;\n    const nextOffset = velocity > 0 ? 1 : -1;\n    const nextItem = order[index + nextOffset];\n    if (!nextItem)\n        return order;\n    const item = order[index];\n    const nextLayout = nextItem.layout;\n    const nextItemCenter = mixNumber(nextLayout.min, nextLayout.max, 0.5);\n    if ((nextOffset === 1 && item.layout.max + offset > nextItemCenter) ||\n        (nextOffset === -1 && item.layout.min + offset < nextItemCenter)) {\n        return moveItem(order, index, index + nextOffset);\n    }\n    return order;\n}\n\nexport { checkReorder };\n","const BYTE_UNITS = [\n\t'B',\n\t'kB',\n\t'MB',\n\t'GB',\n\t'TB',\n\t'PB',\n\t'EB',\n\t'ZB',\n\t'YB',\n];\n\nconst BIBYTE_UNITS = [\n\t'B',\n\t'KiB',\n\t'MiB',\n\t'GiB',\n\t'TiB',\n\t'PiB',\n\t'EiB',\n\t'ZiB',\n\t'YiB',\n];\n\nconst BIT_UNITS = [\n\t'b',\n\t'kbit',\n\t'Mbit',\n\t'Gbit',\n\t'Tbit',\n\t'Pbit',\n\t'Ebit',\n\t'Zbit',\n\t'Ybit',\n];\n\nconst BIBIT_UNITS = [\n\t'b',\n\t'kibit',\n\t'Mibit',\n\t'Gibit',\n\t'Tibit',\n\t'Pibit',\n\t'Eibit',\n\t'Zibit',\n\t'Yibit',\n];\n\n/*\nFormats the given number using `Number#toLocaleString`.\n- If locale is a string, the value is expected to be a locale-key (for example: `de`).\n- If locale is true, the system default locale is used for translation.\n- If no value for locale is specified, the number is returned unmodified.\n*/\nconst toLocaleString = (number, locale, options) => {\n\tlet result = number;\n\tif (typeof locale === 'string' || Array.isArray(locale)) {\n\t\tresult = number.toLocaleString(locale, options);\n\t} else if (locale === true || options !== undefined) {\n\t\tresult = number.toLocaleString(undefined, options);\n\t}\n\n\treturn result;\n};\n\nconst log10 = numberOrBigInt => {\n\tif (typeof numberOrBigInt === 'number') {\n\t\treturn Math.log10(numberOrBigInt);\n\t}\n\n\tconst string = numberOrBigInt.toString(10);\n\n\treturn string.length + Math.log10('0.' + string.slice(0, 15));\n};\n\nconst log = numberOrBigInt => {\n\tif (typeof numberOrBigInt === 'number') {\n\t\treturn Math.log(numberOrBigInt);\n\t}\n\n\treturn log10(numberOrBigInt) * Math.log(10);\n};\n\nconst divide = (numberOrBigInt, divisor) => {\n\tif (typeof numberOrBigInt === 'number') {\n\t\treturn numberOrBigInt / divisor;\n\t}\n\n\tconst integerPart = numberOrBigInt / BigInt(divisor);\n\tconst remainder = numberOrBigInt % BigInt(divisor);\n\treturn Number(integerPart) + (Number(remainder) / divisor);\n};\n\nexport default function prettyBytes(number, options) {\n\tif (typeof number !== 'bigint' && !Number.isFinite(number)) {\n\t\tthrow new TypeError(`Expected a finite number, got ${typeof number}: ${number}`);\n\t}\n\n\toptions = {\n\t\tbits: false,\n\t\tbinary: false,\n\t\tspace: true,\n\t\t...options,\n\t};\n\n\tconst UNITS = options.bits\n\t\t? (options.binary ? BIBIT_UNITS : BIT_UNITS)\n\t\t: (options.binary ? BIBYTE_UNITS : BYTE_UNITS);\n\n\tconst separator = options.space ? ' ' : '';\n\n\tif (options.signed && (typeof number === 'number' ? number === 0 : number === 0n)) {\n\t\treturn ` 0${separator}${UNITS[0]}`;\n\t}\n\n\tconst isNegative = number < 0;\n\tconst prefix = isNegative ? '-' : (options.signed ? '+' : '');\n\n\tif (isNegative) {\n\t\tnumber = -number;\n\t}\n\n\tlet localeOptions;\n\n\tif (options.minimumFractionDigits !== undefined) {\n\t\tlocaleOptions = {minimumFractionDigits: options.minimumFractionDigits};\n\t}\n\n\tif (options.maximumFractionDigits !== undefined) {\n\t\tlocaleOptions = {maximumFractionDigits: options.maximumFractionDigits, ...localeOptions};\n\t}\n\n\tif (number < 1) {\n\t\tconst numberString = toLocaleString(number, options.locale, localeOptions);\n\t\treturn prefix + numberString + separator + UNITS[0];\n\t}\n\n\tconst exponent = Math.min(Math.floor(options.binary ? log(number) / Math.log(1024) : log10(number) / 3), UNITS.length - 1);\n\tnumber = divide(number, (options.binary ? 1024 : 1000) ** exponent);\n\n\tif (!localeOptions) {\n\t\tnumber = number.toPrecision(3);\n\t}\n\n\tconst numberString = toLocaleString(Number(number), options.locale, localeOptions);\n\n\tconst unit = UNITS[exponent];\n\n\treturn prefix + numberString + separator + unit;\n}\n","import type { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport { Icon } from '../icon.tsx';\n\n/**\n * A generic button with an icon only\n */\nexport function IconButton(props: {\n\ticon: IconDefinition;\n\tonClick?: () => void;\n}) {\n\treturn (\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\tclassName=\"btn-ghost sm:btn-square\"\n\t\t\tonClick={props.onClick}\n\t\t>\n\t\t\t<Icon icon={props.icon} className=\"fa-lg\" />\n\t\t</button>\n\t);\n}\n","import {\n\tfaFileCirclePlus,\n\tfaGripVertical,\n\tfaTrash,\n\tfaXmark,\n} from '@fortawesome/free-solid-svg-icons';\nimport { AnimatePresence, Reorder } from 'framer-motion';\nimport prettyBytes from 'pretty-bytes';\nimport { getDefaultTransition, ignoreDefault } from '../common/utilities.ts';\nimport type { PdfFileMapInterface } from '../common/types.ts';\nimport { PrimaryButton } from './buttons/primary.tsx';\nimport { IconButton } from './buttons/icon.tsx';\nimport { DropzoneWrapper } from './dropzones/wrapper.tsx';\n\n// A reorderable list item\nfunction SortableItem(props: {\n\tid: string;\n\tname: string;\n\tsize: number;\n\tonRemove: (fileId: string) => void;\n\tdisabled: boolean;\n}) {\n\tconst classNames = `bg-base-100 shadow-md flex-row justify-between p-2 gap-4 rounded-lg cursor-pointer overflow-hidden hover:bg-base-200 ${(props.disabled && 'opacity-40') || ''}`;\n\tconst animationProps = {\n\t\tinitial: {\n\t\t\tscale: 0,\n\t\t},\n\t\tanimate: {\n\t\t\tscale: 1,\n\t\t},\n\t\texit: {\n\t\t\tscale: 0,\n\t\t},\n\t\t...getDefaultTransition(),\n\t};\n\n\treturn (\n\t\t<Reorder.Item\n\t\t\tkey={props.id}\n\t\t\tvalue={props.id}\n\t\t\tclassName={classNames}\n\t\t\t{...animationProps}\n\t\t>\n\t\t\t<div className=\"overflow-hidden flex-row gap-0 items-center sm:gap-2\">\n\t\t\t\t<IconButton icon={faGripVertical} />\n\t\t\t\t<p className=\"overflow-hidden font-bold whitespace-nowrap text-ellipsis\">\n\t\t\t\t\t{props.name}\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t<div className=\"overflow-hidden flex-row flex-none gap-0 items-center sm:gap-2\">\n\t\t\t\t<p className=\"whitespace-nowrap\">\n\t\t\t\t\t({prettyBytes(props.size, { maximumFractionDigits: 0 })})\n\t\t\t\t</p>\n\t\t\t\t<div className=\"justify-end card-actions\">\n\t\t\t\t\t<IconButton icon={faXmark} onClick={() => props.onRemove(props.id)} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Reorder.Item>\n\t);\n}\n\n// Create an interface for SortableFileList props since there are a lot of types to define\ninterface SortableFileListPropsInterface {\n\tfileIds: string[];\n\tfiles: PdfFileMapInterface;\n\tonReorder: (newFileIds: string[]) => void;\n\tonFileRemoved: (id: string) => void;\n\tdisabled: boolean;\n}\n\n// A reorderable list of PDF files\nfunction SortableFileList(props: SortableFileListPropsInterface) {\n\treturn (\n\t\t<Reorder.Group\n\t\t\taxis=\"y\"\n\t\t\tvalues={props.fileIds}\n\t\t\tonReorder={props.onReorder}\n\t\t\tclassName=\"overflow-hidden flex-col gap-5 px-6 py-7 shadow-inner bg-base-300\"\n\t\t>\n\t\t\t<AnimatePresence>\n\t\t\t\t{props.fileIds.map((fileId) => (\n\t\t\t\t\t<SortableItem\n\t\t\t\t\t\tkey={fileId}\n\t\t\t\t\t\tid={fileId}\n\t\t\t\t\t\tname={props.files[fileId].getName}\n\t\t\t\t\t\tsize={props.files[fileId].getSize}\n\t\t\t\t\t\tonRemove={props.onFileRemoved}\n\t\t\t\t\t\tdisabled={props.disabled}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</AnimatePresence>\n\t\t</Reorder.Group>\n\t);\n}\n\n// Create an interface for FileManager props since there are a lot of types to define\ninterface FileManagerPropsInterface extends SortableFileListPropsInterface {\n\tonFileAdded: (inputFiles: FileList) => void;\n\tonAllFilesRemoved: () => void;\n}\n\n/**\n * A component that allows the user to add and remove PDF files from a list\n */\nexport function FileManager(props: FileManagerPropsInterface) {\n\t// Calculate the combined size of all files using a reduction\n\tfunction getEstimatedFileSize() {\n\t\treturn prettyBytes(\n\t\t\tObject.values(props.files).reduce(\n\t\t\t\t(partialSum, pdfFile) => partialSum + pdfFile.getSize,\n\t\t\t\t0,\n\t\t\t),\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"flex-col gap-4 justify-between items-center p-6 text-lg font-medium sm:flex-row sm:pl-10\">\n\t\t\t\t<h2>\n\t\t\t\t\t{props.fileIds.length} file{props.fileIds.length !== 1 && 's'} added (\n\t\t\t\t\t{getEstimatedFileSize()})\n\t\t\t\t</h2>\n\t\t\t\t<div className=\"flex-row flex-1 gap-2 sm:flex-none\">\n\t\t\t\t\t<DropzoneWrapper onFilesAdded={props.onFileAdded}>\n\t\t\t\t\t\t<PrimaryButton icon={faFileCirclePlus} fake>\n\t\t\t\t\t\t\tAdd File\n\t\t\t\t\t\t</PrimaryButton>\n\t\t\t\t\t</DropzoneWrapper>\n\n\t\t\t\t\t<PrimaryButton icon={faTrash} onClick={props.onAllFilesRemoved}>\n\t\t\t\t\t\tRemove All\n\t\t\t\t\t</PrimaryButton>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Wrap the SortableFileList component with a div so that we can selectively prevent propagation of click events to it */}\n\t\t\t<div\n\t\t\t\tstyle={{ pointerEvents: (props.disabled && 'none') || 'initial' }}\n\t\t\t\tonClick={props.disabled ? ignoreDefault : undefined}\n\t\t\t\tonKeyUp={props.disabled ? ignoreDefault : undefined}\n\t\t\t\tclassName=\"overflow-hidden\"\n\t\t\t>\n\t\t\t\t<SortableFileList\n\t\t\t\t\tfileIds={props.fileIds}\n\t\t\t\t\tfiles={props.files}\n\t\t\t\t\tonReorder={props.onReorder}\n\t\t\t\t\tonFileRemoved={props.onFileRemoved}\n\t\t\t\t\tdisabled={props.disabled}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n","import type { ReactNode } from 'react';\n\ntype Props = {\n\tclassName?: string;\n\tvisible: boolean;\n\tchildren: ReactNode;\n};\n\n/**\n * A section that can be hidden\n */\nexport function Section({ className = '', visible = true, children }: Props) {\n\treturn (\n\t\t<section\n\t\t\tclassName={`flex-col justify-center w-full h-full ${visible ? '' : 'hidden overflow-hidden '}${className}`}\n\t\t>\n\t\t\t{children}\n\t\t</section>\n\t);\n}\n","import type { ReactNode } from 'react';\nimport { SingleColumnLayout } from './single-column-layout.tsx';\n\n/**\n * Wrapper that applies a single column layout to the main page content\n */\nexport function Main(props: { children: ReactNode }) {\n\treturn (\n\t\t<main className=\"flex-col flex-1 w-full h-full\">\n\t\t\t<SingleColumnLayout className=\"flex-1 sm:w-5/6\" collapse>\n\t\t\t\t{props.children}\n\t\t\t</SingleColumnLayout>\n\t\t</main>\n\t);\n}\n","// External deps\nimport { useState, useCallback } from 'react';\n\n// Local deps\nimport config from '../../gatsby-config.ts';\nimport type { PdfFileMapInterface } from '../common/types.ts';\nimport {\n\tloadMetadata,\n\tPdfManager,\n\ttype StatusMsg,\n} from '../common/utilities.ts';\nimport { LargeDropzone } from '../components/dropzones/large.tsx';\nimport { FullPageDropzone } from '../components/dropzones/full-page.tsx';\nimport { Alert } from '../components/alert.tsx';\nimport { ActionButton } from '../components/buttons/action.tsx';\nimport { Footer } from '../components/layout/footer.tsx';\nimport { Header } from '../components/layout/header.tsx';\nimport { FileManager } from '../components/file-manager.tsx';\nimport { Section } from '../components/layout/section.tsx';\nimport { Main } from '../components/layout/main.tsx';\nimport { PageLayout } from '../components/layout/page-layout.tsx';\n\n// Constants\n\nconst METADATA = loadMetadata(config);\n\n// Exports\n\n/**\n * Index page\n */\n// biome-ignore lint/style/noDefaultExport: Pages must use default exports\nexport default function IndexPage() {\n\tconst [fileIds, setFileIds] = useState<string[]>([]);\n\tconst [files, setFiles] = useState<PdfFileMapInterface>({});\n\tconst [statusMsgs, setStatusMsgs] = useState<StatusMsg[]>([]);\n\tconst [mergedPdfUrl, setMergedPdfUrl] = useState<string>('');\n\tconst [currentProgress, setCurrentProgress] = useState<number>(0);\n\n\tconst pdfManager = new PdfManager(METADATA.shortTitle, METADATA.siteUrl);\n\n\t// Update the list of files and fileIds, resetting progress and the download URL\n\tfunction updateState(\n\t\tnewFileIds: string[],\n\t\tnewFiles: PdfFileMapInterface | null = null,\n\t) {\n\t\tpdfManager.removeMergedFile(mergedPdfUrl);\n\n\t\t// Skip updating if the file map hasn't changed\n\t\tif (newFiles) {\n\t\t\tsetFiles(newFiles);\n\t\t}\n\n\t\tsetFileIds(newFileIds);\n\t\tsetCurrentProgress(0);\n\t\tsetMergedPdfUrl('');\n\t}\n\n\t// Handler for file upload events\n\tconst handleAddFiles = useCallback(\n\t\t(inputFiles: FileList) => {\n\t\t\tconst [validFileList, statusMsgList] = pdfManager.filterInvalidFiles(\n\t\t\t\tfiles,\n\t\t\t\tArray.from(inputFiles),\n\t\t\t);\n\n\t\t\tif (validFileList.length > 0) {\n\t\t\t\tconst tempFileMap = files;\n\t\t\t\tconst newFileIds = [] as string[];\n\n\t\t\t\tfor (const file of validFileList) {\n\t\t\t\t\tnewFileIds.push(file.id);\n\t\t\t\t\ttempFileMap[file.id] = file;\n\t\t\t\t}\n\n\t\t\t\tupdateState(fileIds.concat(newFileIds), tempFileMap);\n\t\t\t}\n\n\t\t\tif (statusMsgList.length > 0) {\n\t\t\t\tsetStatusMsgs(statusMsgList);\n\t\t\t}\n\t\t},\n\t\t[fileIds, files],\n\t);\n\n\t// Remove a single file from the list given its id\n\tfunction handleRemoveFile(id: string) {\n\t\tconst newFiles = files;\n\t\tconst newFileIds = fileIds.filter((fileId) => fileId !== id);\n\n\t\tdelete newFiles[id];\n\n\t\tupdateState(newFileIds, newFiles);\n\t}\n\n\t// Remove all files from the list\n\tfunction handleRemoveAllFiles() {\n\t\tupdateState([], {});\n\t}\n\n\t// Reorder the list of file ids\n\tfunction handleReorderFiles(fileIds: string[]) {\n\t\tupdateState(fileIds);\n\t}\n\n\t// Handle clicks on merge button\n\tasync function handleMerge() {\n\t\tconst [downloadUrl, statusMsgList] = await pdfManager.createMergedFile(\n\t\t\tfiles,\n\t\t\tfileIds,\n\t\t\tsetCurrentProgress,\n\t\t);\n\n\t\t// Reset progress if there were any critical errors\n\t\tif (downloadUrl === '') {\n\t\t\tsetMergedPdfUrl('');\n\t\t}\n\n\t\tsetMergedPdfUrl(downloadUrl);\n\t\tsetStatusMsgs(statusMsgList);\n\t\tsetCurrentProgress(0);\n\t}\n\n\treturn (\n\t\t<PageLayout metadata={METADATA}>\n\t\t\t<Header title={METADATA.shortTitle}>{METADATA.description}</Header>\n\n\t\t\t<Main>\n\t\t\t\t<FullPageDropzone onFilesAdded={handleAddFiles} />\n\n\t\t\t\t<Section visible={statusMsgs.length > 0} className=\"gap-5\">\n\t\t\t\t\t{statusMsgs.map((statusMsg) => (\n\t\t\t\t\t\t<Alert key={statusMsg.getId} statusMsg={statusMsg} />\n\t\t\t\t\t))}\n\t\t\t\t</Section>\n\n\t\t\t\t<Section\n\t\t\t\t\tvisible={fileIds.length === 0}\n\t\t\t\t\tclassName=\"flex-1 rounded-none border bg-base-100 border-base-300 sm:rounded-box\"\n\t\t\t\t>\n\t\t\t\t\t<LargeDropzone onFilesAdded={handleAddFiles} />\n\t\t\t\t</Section>\n\n\t\t\t\t<Section\n\t\t\t\t\tvisible={fileIds.length > 0}\n\t\t\t\t\tclassName=\"rounded-none border bg-base-100 border-base-300 sm:rounded-box\"\n\t\t\t\t>\n\t\t\t\t\t<FileManager\n\t\t\t\t\t\tfileIds={fileIds}\n\t\t\t\t\t\tfiles={files}\n\t\t\t\t\t\tonReorder={handleReorderFiles}\n\t\t\t\t\t\tonFileAdded={handleAddFiles}\n\t\t\t\t\t\tonFileRemoved={handleRemoveFile}\n\t\t\t\t\t\tonAllFilesRemoved={handleRemoveAllFiles}\n\t\t\t\t\t\tdisabled={currentProgress > 0}\n\t\t\t\t\t/>\n\t\t\t\t</Section>\n\n\t\t\t\t<Section visible={fileIds.length > 0} className=\"px-6 sm:px-0\">\n\t\t\t\t\t<ActionButton\n\t\t\t\t\t\tnumOfFiles={fileIds.length}\n\t\t\t\t\t\tprogress={currentProgress}\n\t\t\t\t\t\tdownloadUrl={mergedPdfUrl}\n\t\t\t\t\t\tonClick={handleMerge}\n\t\t\t\t\t/>\n\t\t\t\t</Section>\n\t\t\t</Main>\n\n\t\t\t<Footer\n\t\t\t\tauthor={METADATA.author}\n\t\t\t\tgithubUrl={METADATA.githubUrl}\n\t\t\t\thomepageDomain={METADATA.homepageDomain}\n\t\t\t/>\n\t\t</PageLayout>\n\t);\n}\n"],"names":["DropzoneWrapper","_ref","className","children","onFilesAdded","_jsxs","_jsx","type","accept","onChange","event","ignoreDefault","files","target","length","multiple","LargeDropzone","props","Icon","icon","faFileCirclePlus","FullPageDropzone","isDragging","setIsDragging","useState","dragCounter","useRef","handleDrag","useCallback","handleDragIn","current","dataTransfer","items","handleDragOut","handleDrop","clearData","useEffect","window","addEventListener","removeEventListener","PopChildMeasure","getSnapshotBeforeUpdate","prevProps","element","this","childRef","isPresent","parent","offsetParent","parentWidth","offsetWidth","size","sizeRef","height","offsetHeight","width","top","offsetTop","left","offsetLeft","right","componentDidUpdate","render","PopChild","anchorX","id","useId","ref","nonce","useContext","MotionConfigContext","useInsertionEffect","x","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","contains","removeChild","jsx","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","isReusedContext","context","useMemo","childId","set","isComplete","values","register","delete","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","AnimatePresence","propagate","isParentPresent","safeToRemove","presentChildren","presentKeys","map","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","renderedChildren","setRenderedChildren","i","includes","get","join","exitingChildren","nextChildren","splice","forceRender","LayoutGroupContext","L","Fragment","undefined","has","isEveryExitComplete","isExitComplete","alertTypes","SeverityTypes","Success","class","faSquareCheck","Warning","faTriangleExclamation","Error","faCircleExclamation","Alert","statusMsg","getSeverity","visible","setVisible","animationProps","animate","exit","variants","opacity","scaleY","hidden","getDefaultTransition","timeoutId","setTimeout","clearTimeout","motion","div","layout","getMsg","getId","FullWidthButton","disabled","onClick","ProgressBar","progress","transition","power","timeConstant","velocity","role","MergeActionButton","mergeButton","faLayerGroup","ProgressActionButton","isSaving","percentString","toFixed","content","DownloadActionButton","href","downloadUrl","rel","download","faFileArrowDown","ActionButton","numOfFiles","ReorderContext","createContext","useMotionValue","isStatic","setLatest","on","useCombineMotionValues","combineValues","updateValue","scheduleUpdate","preRender","subscriptions","v","unsubscribe","useTransform","input","inputRangeOrTransformer","outputRange","options","compute","useComputed","transformer","args","useImmediate","Array","isArray","argOffset","inputValue","inputRange","interpolator","interpolate","transform","useListTransform","latest","numValues","useDefaultMotionValue","defaultValue","ReorderItemComponent","as","onDrag","externalRef","Component","point","y","zIndex","latestX","latestY","Boolean","axis","registerItem","updateOrder","drag","dragSnapToOrigin","gesturePoint","onLayoutMeasure","measured","ignoreStrict","ReorderItem","forwardRef","ReorderGroupComponent","onReorder","order","isReordering","idx","findIndex","entry","sort","compareMin","item","offset","newOrder","index","nextOffset","nextItem","nextLayout","nextItemCenter","min","max","checkReorder","getValue","filter","indexOf","ReorderGroup","a","b","BYTE_UNITS","BIBYTE_UNITS","BIT_UNITS","BIBIT_UNITS","toLocaleString","number","locale","result","log10","numberOrBigInt","Math","string","toString","slice","log","divide","divisor","integerPart","BigInt","remainder","Number","prettyBytes","isFinite","TypeError","UNITS","bits","binary","space","separator","signed","isNegative","prefix","localeOptions","minimumFractionDigits","maximumFractionDigits","exponent","floor","toPrecision","IconButton","SortableItem","classNames","scale","Reorder","faGripVertical","name","faXmark","onRemove","SortableFileList","fileIds","fileId","getName","getSize","onFileRemoved","FileManager","_Fragment","Object","reduce","partialSum","pdfFile","onFileAdded","PrimaryButton","fake","faTrash","onAllFilesRemoved","pointerEvents","onKeyUp","Section","Main","SingleColumnLayout","collapse","METADATA","loadMetadata","config","IndexPage","setFileIds","setFiles","statusMsgs","setStatusMsgs","mergedPdfUrl","setMergedPdfUrl","currentProgress","setCurrentProgress","pdfManager","PdfManager","shortTitle","siteUrl","updateState","newFileIds","newFiles","removeMergedFile","handleAddFiles","inputFiles","validFileList","statusMsgList","filterInvalidFiles","from","tempFileMap","file","concat","PageLayout","metadata","Header","title","description","async","createMergedFile","Footer","author","githubUrl","homepageDomain"],"sourceRoot":""}